// Build config for the gradle plugin

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
    mavenCentral()
    mavenLocal()
}


task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

task renamePom() {
	file('build/publications/mavenJava/pom-default.xml.asc').renameTo(file('build/publications/mavenJava/pom.xml.asc'))
}

task signPom(type: Sign) {
	files file('build/publications/mavenJava/pom-default.xml')
	finalizedBy renamePom
}





task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

signing {
    sign jar
    sign sourceJar
    sign(file('build/publications/mavenJava/pom-default.xml'))
}


jar {
	finalizedBy signJar
}

sourceJar {
	finalizedBy signSourceJar
}

afterEvaluate {
    model {
    	tasks.generatePomFileForMavenJavaPublication {
        	finalizedBy signPom
    	}
	}
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.github.randomcodeorg.ppplugin'
            artifactId 'ppplugin-gradle'
            version '0.0.1'

            from components.java
            artifact source: '/build/publications/mavenJava/pom.xml.asc', extension: 'pom.asc'
            artifact source: '/build/libs/ppplugin.gradle.jar.asc', extension: 'jar.asc'
            artifact sourceJar {
            	classifier "sources"
            }
            artifact source: '/build/libs/ppplugin.gradle-sources.jar.asc', classifier: 'sources', extension: 'jar.asc'
            pom.withXml {
            	asNode().appendNode('description', 'A gradle plugin that executes one or multiple user defined processors that can be used to transform or modify the compilation result.')
            	
            	Node license = asNode().appendNode('licenses').appendNode('license')
            	license.appendNode('name', 'Apache License, Version 2.0')
            	license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
            	license.appendNode('distribution', 'repo')
            	
            	asNode().appendNode('name', 'Post Processor Plugin for Gradle')
            	asNode().appendNode('url', 'https://github.com/RandomCodeOrg/PPPluginGradle')
            	asNode().appendNode('scm').appendNode('url', 'https://github.com/RandomCodeOrg/PPPluginGradle.git')
            	Node developer = asNode().appendNode('developers').appendNode('developer')
            	developer.appendNode('id', 'RandomCodeOrg')
            	developer.appendNode('name', 'RandomCodeOrg-Team')
            }
        }
    }
    repositories {
    	maven {
    		credentials {
    			username project.property('maven.settings.username')
    			password project.property('maven.settings.password')
    		}
    		url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    	}
    }
}



dependencies {
    compile gradleApi()
    compile 'com.github.randomcodeorg.ppplugin:ppplugin:0.2.0'
    compile 'com.android.tools.build:gradle:1.5.0'
    testCompile 'junit:junit:4.11'
}

